{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "East US 2",
        "Central US",
        "South Central US",
        "North Central US",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Brazil South",
        "Australia East",
        "Australia Southeast",
        "Central India",
        "South India",
        "West India"
      ],
      "metadata": {
        "description": "The region to deploy the resources into"
      },
      "defaultValue": "Australia East"
    },
    "sharepointFarmName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Sharepoint farm"
      },
      "defaultValue": "spfarmao"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "berryst"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "spVMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the SP VMs Created"
      },
      "defaultValue": "Standard_DS2"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "sbox.az"
    },
    "sqlAOAGName": {
      "type": "string",
      "metadata": {
        "description": "The existing SQL AlwaysOn Availability Group Name that SharePoint will use to put the databases into availability group"
      },
      "defaultValue": "sqlon-ag"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service account name"
      },
      "defaultValue": "sqlsvcact"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service account password"
      }
    },
    "sharePointSetupUserAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Setup account name"
      },
      "defaultValue": "sp_setup"
    },
    "sharePointSetupUserAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Setup account password"
      }
    },
    "sharePointFarmAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Farm account name"
      },
      "defaultValue": "sp_farm"
    },
    "sharePointFarmAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Farm account password"
      }
    },
    "sharePointFarmPassphrasePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Farm Passphrase"
      }
    },
    "spSiteTemplateName": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Content Site Template Name"
      },
      "defaultValue": "STS#0"
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix of the new storage account created to store the VMs disks, different storage accounts will be created for AD,SQL and Sharepoint VMs"
      },
      "defaultValue": "spsboxstorage"
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "existingVirtualNetworkId": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the existing VNET. You can find the Resource ID for the VNET on the Properties blade of the VNET."
      },
      "defaultValue": "/subscriptions/20dcc231-b33c-4d86-8951-da3e50be0ee4/resourceGroups/sandbox/providers/Microsoft.Network/virtualNetworks/ADVNET"
    },

    "SqlSubnet": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the SQL & Witness VMs should be deployed"
      },
      "defaultValue": "sqlSubnet"
    },
    "AlwaysOnListenerFQDN": {
      "type": "string",
      "metadata": {
        "description": "The name of existing Always On Listener. It can be a short name or FQDN"
      },
      "defaultValue": "sqlonag-listener"
    },

    "staticSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "staticSubnet"
    },
    "spWebSubnet": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the SQL & Witness VMs should be deployed"
      },
      "defaultValue": "spWebSubnet"
    },
    "spAppSubnet": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the SQL & Witness VMs should be deployed"
      },
      "defaultValue": "spAppSubnet"
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      },
      "defaultValue": "sbox.az"
    },

    "existingAdPDCVMName": {
      "type": "string",
      "metadata": {
        "description": "Computer name of the existing Primary AD domain controller & DNS server"
      },
      "defaultValue": "sboxdc"
    },
    "spWebIPRGName": {
      "type": "string",
      "defaultValue": "sandbox",
      "metadata": {
        "description": "Resource Group containing existing SP Web IP address"
      }
    },
    "spWebIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicates whether the Sharepoint farm's IP is new or existing"
      }
    },
    "existingPrimaryAdIpAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of the existing Primary AD domain controller & DNS server"
      },
      "defaultValue": "172.16.1.6"
    },

    "existingSecondaryAdIpAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of the existing Secondary AD domain controller & DNS server"
      },
      "defaultValue": "172.16.1.6"
    },

    "spWebIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "The new or existing - depending on value of spWebIPNewOrExisting parameter - IP address name for SP Web "
      },
      "defaultValue": "spIP"
    },

    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Address for the Sharepoint Web Application"
      },
      "defaultValue": "sboxsp13"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "ADVNET",
      "metadata": {
        "description": "Name of existing Virtual Network Name"
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "Base URL for Marketplace",
        "artifactsBaseUrl": ""
      },
      "defaultValue": "https://raw.githubusercontent.com/berryst/Templates/master/sharepoint-server-farm-ha-joinDC-and-sql"
    }
  },
    "variables": {
      "spCADNSPrefix": "[concat(parameters('dnsPrefix'),'admin')]",
      "spCAIPAddressName": "[concat(parameters('spWebIPAddressName'),'admin')]",
      "configDatabaseName": "SP13_Services_Config",
      "administrationContentDatabaseName": "SP13_Services_AdminContent",
      "contentDatabaseName": "SP13_Content_Admin",
      "lbSettings": {
        "adLBBE": "adDCLBBE",
        "rdpLBFE": "rdpLBFE",
        "spWebLBFE": "spWebLBFE",
        "spCALBFE": "spCALBFE",
        "spWebLBBE": "spWebLBBE",
        "spCALBBE": "spCALBBE",
        "spWebLB": "spWeb",
        "spCALB": "spCALB",
        "rdpLBName": "rdpLoadBalancer",
        "spWebLBName": "spWebLoadBalancer",
        "spCALBName": "spCALoadBalancer"

      },
      "subnetNames": {
        "staticSubnetName": "staticSubnet",
        "sqlSubnetName": "sqlSubnet",
        "spWebSubnetName": "spWebSubnet",
        "spAppSubnetName": "spAppSubnet"
      },
      "RDPNAT": "RDP",
      "spCANAT": "spCANAT",
      "spWebProbe": "spWebProbe",
      "spWebProbePort": 8088,
      "rdpIPAddressName": "rdpIP",
      "vmSettings": {
        "availabilitySets": {
          "sqlAvailabilitySetName": "sqlAvailabilitySet",
          "adAvailabilitySetName": "adAvailabilitySet",
          "spWebAvailabilitySetName": "spWebAvailabilitySet",
          "spAppAvailabilitySetName": "spAppAvailabilitySet"
        },
        "noOfspRoleVMs": 2,
        "vmContainerName": "vhds",
        "spwebVMName": "sp13-web-",
        "spappVMName": "sp13-app-",
        "sqlVMName": "SQLON-SQLC-",
        "windowsImagePublisher": "MicrosoftWindowsServer",
        "windowsImageOffer": "WindowsServer",
        "windowsImageSKU": "2012-R2-Datacenter",
        "sqlImagePublisher": "MicrosoftSQLServer",
        "sqlImageOffer": "SQL2014-WS2012R2",
        "sqlImageSKU": "Enterprise",
        "spImagePublisher": "MicrosoftSharePoint",
        "spImageOffer": "MicrosoftSharePointServer",
        "spImageSKU": "2013",
        "rdpPort": 3389,
        "spCentralAdminPort": 80,
        "windowsDiskSize": 128,
        "sqlDiskSize": 1000,
        "spDiskSize": 128
      },
      "prefix": "[tolower(trim(subString(concat(parameters('dnsPrefix'),'           '),0,10)))]",
      "VnetID": "parameters('existingVirtualNetworkId')",
      "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
      "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
      "spWebSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spWebSubnetName)]",
      "spAppSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spAppSubnetName)]",
      "ids": {
        "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
        "spWeblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spWebLBName)]",        
        "spCAlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spCALBName)]"
      },
      "derivedIds": {

        "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
        "spWebLBFEConfigID": "[concat(variables('ids').spWeblbID,'/frontendIPConfigurations/',variables('lbSettings').spWebLBFE)]",
        "adRDPNATRuleID": "[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
        "spWebProbeID": "[concat(variables('ids').spWeblbID,'/probes/',variables('spWebProbe'))]",
        "spWebBEAddressPoolID": "[concat(variables('ids').spWeblbID,'/backendAddressPools/',variables('lbSettings').spWebLBBE)]",
        "spCABEAddressPoolID": "[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').spCALBBE)]",
        "spCAlbFEConfigID": "[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').spCALBFE)]",
        "spCANATRuleID": "[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('spCANAT'))]"
      },
      "subnets": [
        {
          "name": "[variables('subnetNames').staticSubnetName]",
          "properties": {
            "addressPrefix": "[parameters('staticSubnet')]"
          }
        },
        {
          "name": "[variables('subnetNames').sqlSubnetName]",
          "properties": {
            "addressPrefix": "[parameters('sqlSubnet')]"
          }
        },
        {
          "name": "[variables('subnetNames').spWebSubnetName]",
          "properties": {
            "addressPrefix": "[parameters('spWebSubnet')]"
          }
        },
        {
          "name": "[variables('subnetNames').spAppSubnetName]",
          "properties": {
            "addressPrefix": "[parameters('spAppSubnet')]"
          }
        }
      ],
      "configuration": {
        "vnetwithDNSTemplateURL": "[concat(parameters('baseUrl'),'/vnet-with-dns-server.json')]",
        "nicTemplateURL": "[concat(parameters('baseUrl'),'/nic.json')]",
        "spModulesURL": "[concat(variables('assetLocation'),'/ConfigureSharePointServerHA.ps1.zip')]",
        "spConfigurationFunction": "ConfigureSharePointServerHA.ps1\\ConfigureSharePointServerHA",
        "spWebIPAdressSetupURL": "[concat(parameters('baseUrl'),'/publicip-',parameters('spWebIPNewOrExisting'),'.json')]",
        "spCAIPAdressSetupURL": "[concat(parameters('baseUrl'),'/publicip-','new.json')]",
        "rdpIPAdressSetupURL": "[concat(parameters('baseUrl'),'/publicip-rdp.json')]",
        "availabilitySetSetupURL": "[concat(parameters('baseUrl'),'/availabilitySets.json')]",
        "creatingSharepointVMsURL": "[concat(parameters('baseUrl'),'/creatingSharepointVMs.json')]",
        "provisioningSharepointUrl": "[concat(parameters('baseUrl'),'/provisioningSharePoint.json')]",
        "creatingStorageAccounts": "[concat(parameters('baseUrl'),'/creatingStorageAccounts.json')]",
        "vnetSetupURL": "[concat(parameters('baseUrl'),'/vnet-new.json')]",
        "setupLBsUrl": "[concat(parameters('baseUrl'),'/setupLBs.json')]",
        "creatingNicsUrl": "[concat(parameters('baseUrl'),'/creatingNICS.json')]"
      },
      "assetLocation": "https: //raw.githubusercontent.com/berryst/Templates/master/sharepoint-server-farm-ha-joinDC-and-sql/dsc"

    },
    "resources": [
      {
        "name": "CreatingStorageAccounts",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').creatingStorageAccounts]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "storageAccountNamePrefix": {
              "value": "[parameters('storageAccountNamePrefix')]"
            },
            "storageAccountType": {
              "value": "[parameters('storageAccountType')]"
            }
          }
        }
      },
      {
        "name": "SettingUpRdp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').rdpIPAdressSetupURL]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "rdpIPAddressName": {
              "value": "[variables('rdpIPAddressName')]"
            },
            "rdpLBName": {
              "value": "[variables('lbSettings').rdpLBName]"
            },
            "rdpLBFE": {
              "value": "[variables('lbSettings').rdpLBFE]"
            },
            "adLBBE": {
              "value": "[variables('lbSettings').adLBBE]"
            },
            "RDPNAT": {
              "value": "[variables('RDPNAT')]"
            },
            "rdplbFEConfigID": {
              "value": "[variables('derivedIds').rdplbFEConfigID]"
            }
          }
        }
      },
      {
        "name": "SettingUpSharepointWebPublicIP",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').spWebIPAdressSetupURL]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "publicIPAddressName": {
              "value": "[parameters('spWebIPAddressName')]"
            },
            "publicIPAddressType": {
              "value": "dynamic"
            },
            "dnsPrefix": {
              "value": "[parameters('dnsPrefix')]"
            },
            "publicIpRGName": {
              "value": "[parameters('spWebIPRGName')]"              
            }
          }
        }
      },
      {
        "name": "SettingUpSharepointCentralAdminPublicIP",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').spCAIPAdressSetupURL]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "publicIPAddressName": {
              "value": "[variables('spCAIPAddressName')]"
            },
            "publicIPAddressType": {
              "value": "dynamic"
            },
            "dnsPrefix": {
              "value": "[variables('spCADNSPrefix')]"
            },
            "publicIpRGName": {
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      {
        "name": "CreatingAvailabilitySets",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').availabilitySetSetupURL]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },            
            "spWebAvailabilitySetName": {
              "value": "[variables('vmSettings').availabilitySets.spWebAvailabilitySetName]"
            },
            "spAppAvailabilitySetName": {
              "value": "[variables('vmSettings').availabilitySets.spAppAvailabilitySetName]"
            }
          }
        }
      },      
      {
        "name": "SettingUpLoadBalancers",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/SettingUpSharepointCentralAdminPublicIP",
          "Microsoft.Resources/deployments/SettingUpSharepointWebPublicIP",
          "Microsoft.Resources/deployments/SettingUpRdp"        
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').setupLBsUrl]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "spCALBName": {
              "value": "[variables('lbSettings').spCALBName]"
            },
            "spCALBFE": {
              "value": "[variables('lbSettings').spCALBFE]"
            },
            "spCAResourceId": {
              "value": "[reference('SettingUpSharepointCentralAdminPublicIP').outputs.resourceId.value]"
            },
            "spCALBBE": {
              "value": "[variables('lbSettings').spCALBBE]"
            },
            "spCANAT": {
              "value": "[variables('spCANAT')]"
            },
            "spCAlbFEConfigID": {
              "value": "[variables('derivedIds').spCAlbFEConfigID]"
            },
            "spWebLBName": {
              "value": "[variables('lbSettings').spWebLBName]"
            },
            "spWebLBFE": {
              "value": "[variables('lbSettings').spWebLBFE]"
            },
            "spWebResourceId": {
              "value": "[reference('SettingUpSharepointWebPublicIP').outputs.resourceId.value]"
            },
            "spWebLBBE": {
              "value": "[variables('lbSettings').spWebLBBE]"
            },
            "spWebLB": {
              "value": "[variables('lbSettings').spWebLB]"
            },
            "spWebLBFEConfigID": {
              "value": "[variables('derivedIds').spWebLBFEConfigID]"
            },
            "spWebBEAddressPoolID": {
              "value": "[variables('derivedIds').spWebBEAddressPoolID]"
            },
            "spWebProbeID": {
              "value": "[variables('derivedIds').spWebProbeID]"
            },
            "spWebProbe": {
              "value": "[variables('spWebProbe')]"
            },
            "staticSubnetRef": {
              "value": "[variables('staticSubnetRef')]"
            }
          }
        }
      },
      {
        "name": "CreatingNetworkInterfaces",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [          
          "Microsoft.Resources/deployments/SettingUpRdp",
          "Microsoft.Resources/deployments/SettingUpLoadBalancers"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').creatingNicsUrl]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },            
            "staticSubnetRef": {
              "value": "[variables('staticSubnetRef')]"
            },            
            "spwebVMName": {
              "value": "[variables('vmSettings').spwebVMName]"
            },
            "spWebSubnetRef": {
              "value": "[variables('spWebSubnetRef')]"
            },
            "spWebBEAddressPoolID": {
              "value": "[variables('derivedIds').spWebBEAddressPoolID]"
            },
            "spappVMName": {
              "value": "[variables('vmSettings').spappVMName]"
            },
            "spAppSubnetRef": {
              "value": "[variables('spAppSubnetRef')]"
            },
            "spCABEAddressPoolID": {
              "value": "[variables('derivedIds').spCABEAddressPoolID]"
            },
            "spCANATRuleID": {
              "value": "[variables('derivedIds').spCANATRuleID]"
            }
          }
        }
      },                        
            
      {
        "name": "CreatingSharepointVirtualMachines",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreatingStorageAccounts",
          "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
          "Microsoft.Resources/deployments/CreatingAvailabilitySets"          
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').creatingSharepointVMsURL]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "spappVMName": {
              "value": "[variables('vmSettings').spappVMName]"
            },
            "spwebVMName": {
              "value": "[variables('vmSettings').spwebVMName]"
            },
            "location": {
              "value": "[parameters('location')]"
            },
            "spVMSize": {
              "value": "[parameters('spVMSize')]"
            },
            "spWebAvailabilitySet": {
              "value": "[reference('CreatingAvailabilitySets').outputs.spWebAvailabilitySetName.value]"
            },
            "spAppAvailabilitySet": {
              "value": "[reference('CreatingAvailabilitySets').outputs.spAppAvailabilitySetName.value]"
            },
            "adminUsername": {
              "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
              "value": "[parameters('adminPassword')]"
            },
            "spImagePublisher": {
              "value": "[variables('vmSettings').spImagePublisher]"
            },
            "spImageOffer": {
              "value": "[variables('vmSettings').spImageOffer]"
            },
            "spImageSKU": {
              "value": "[variables('vmSettings').spImageSKU]"
            },
            "vmContainerName": {
              "value": "[variables('vmSettings').vmContainerName]"
            },
            "storageAccountNamePrefix": {
              "value": "[parameters('storageAccountNamePrefix')]"
            }
          }
        }
      },
      {
        "name": "ProvisioningSharepoint",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreatingSharepointVirtualMachines"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('configuration').provisioningSharepointUrl]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "spappVMName": {
              "value": "[variables('vmSettings').spappVMName]"
            },
            "sqlVMName": {
              "value": "[variables('vmSettings').sqlVMName]"
            },
            "location": {
              "value": "[parameters('location')]"
            },
            "spModulesURL": {
              "value": "[variables('configuration').spModulesURL]"
            },
            "spConfigurationFunction": {
              "value": "[variables('configuration').spConfigurationFunction]"
            },
            "domainName": {
              "value": "[parameters('domainName')]"
            },
            "adminUserName": {
              "value": "[parameters('adminUserName')]"
            },
            "adminPassword": {
              "value": "[parameters('adminPassword')]"
            },
            "sharePointSetupUserAccountUserName": {
              "value": "[parameters('sharePointSetupUserAccountUserName')]"
            },
            "sharePointFarmAccountUserName": {
              "value": "[parameters('sharePointFarmAccountUserName')]"
            },
            "sqlServerServiceAccountUserName": {
              "value": "[parameters('sqlServerServiceAccountUserName')]"
            },
            "SQLAlwaysOnListener": {
              "value": "[parameters('AlwaysOnListenerFQDN')]"
            },
            "sqlAOAGName": {
              "value": "[parameters('sqlAOAGName')]"
            },
            "administrationContentDatabaseName": {
              "value": "[variables('administrationContentDatabaseName')]"
            },
            "configDatabaseName": {
              "value": "[variables('configDatabaseName')]"
            },
            "contentDatabaseName": {
              "value": "[variables('contentDatabaseName')]"
            },
            "sharepointCAfqdn": {
              "value": "[reference('SettingUpSharepointCentralAdminPublicIP').outputs.fqdn.value]"
            },
            "sharePointSetupUserAccountPassword": {
              "value": "[parameters('sharePointSetupUserAccountPassword')]"
            },
            "sharePointFarmAccountPassword": {
              "value": "[parameters('sharePointFarmAccountPassword')]"
            },
            "sharePointFarmPassphrasePassword": {
              "value": "[parameters('sharePointFarmPassphrasePassword')]"
            },
            "sqlServerServiceAccountPassword": {
              "value": "[parameters('sqlServerServiceAccountPassword')]"
            },
            "spwebVMName": {
              "value": "[variables('vmSettings').spwebVMName]"
            },
            "sharepointFarmName": {
              "value": "[parameters('sharepointFarmName')]"
            },
            "sharepointWebfqdn": {
              "value": "[reference('SettingUpSharepointWebPublicIP').outputs.fqdn.value]"
            },
            "spSiteTemplateName": {
              "value": "[parameters('spSiteTemplateName')]"
            }
          }
        }
      }
    ],
    "outputs": {
      "fqdn": {
        "value": "[reference('SettingUpSharepointWebPublicIP').outputs.fqdn.value]",
        "type": "string"
      }
    }
  }
